"""
Even Fibonacci numbers 
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
"""


from functools import reduce

fib = [1,2]
n = 4000000

while fib[-1] < n:
    fib.append(fib[-1] + fib[-2])
print("The Fibonacci sequence under {} is: ".format(n))
print(fib)

#Creating a list of even Fibonacci numbers under 'n'

fibonacci_even = []

for fib_even in fib:
    if fib_even % 2 == 0:
        fibonacci_even.append(fib_even)
print("\nThe even Fibonacci numbers sequence under {} is: ".format(n))
print(fibonacci_even)

#Finally, the sum of the even Fibonacci numbers on the list 'fibonacci_even'

sum_even_fib = reduce(lambda x, y: x + y, fibonacci_even)

print("\nThe sum of the even Fibonacci numbers is: {}".format(sum_even_fib))

